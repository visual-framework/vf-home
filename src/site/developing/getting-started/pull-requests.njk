---
title: "Contributing: making Pull Requests"
subtitle: To contribute code back, you'll need to make a PR ([Pull Request](https://help.github.com/en/articles/about-pull-requests)).
intro: This is a more user-friendly feature of GitHub that allows you to contribute to `vf-core` without direct write access.
date: 2020-01-13 12:24:50
layout: layouts/developing.njk
order: 5
---

## What?

If you're thoroughly confused, here are a few helpful links:

- [About branches](https://help.github.com/en/articles/about-branches)
- [Making a fork and pull request](https://www.youtube.com/watch?v=rgbCcBNZcdQ) (video)
- If you get stuck, just make [a normal issue in GitHub](https://github.com/visual-framework/vf-core/issues/new/choose) or [chat us](https://join.slack.com/t/visual-framework/shared_invite/enQtNDAxNzY0NDg4NTY0LWFhMjEwNGY3ZTk3NWYxNWVjOWQ1ZWE4YjViZmY1YjBkMDQxMTNlNjQ0N2ZiMTQ1ZTZiMGM4NjU5Y2E0MjM3ZGQ).

## Branch naming conventions

- The typical format is:
  - `{type}/{brief-description-of-branch}`
- examples: 
  - `component/advanced-search`
  - `fix/grid-breaks-on-ios`

Here are the most common `type`s:

- `components/` when developing a new component;
- `feature/` to be used when working on something that affects the whole system;
- `fix/` to be used for ... fixes;
- `hot-fix/` something very specific and usually urgent; and
- `docs/` for anything to do with documentation, content or code.

## Automated testing

### On push

When you push your branch to GitHub, [Husky](https://github.com/typicode/husky#husky)
will run a pre-commit hook to help enforce Sass linting and ensure the code
builds.

### Visual differences

To be confident that we can ammend components code if needed without breaking anything we need to test against the agreed look and interaction(s) of a component.

We are making use of [Percy](https://percy.io/EMBL/EMBL-Visual-Framework) to do this, comparisons will be automatically generated before a pull request for a component is accepted.
